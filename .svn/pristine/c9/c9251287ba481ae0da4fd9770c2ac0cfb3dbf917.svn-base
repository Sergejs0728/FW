//
//  LoginController.m
//  FieldWork
//
//  Created by Samir Kha on 05/01/2013.
//  Copyright (c) 2013 __MyCompanyName__. All rights reserved.
//

#import "LoginController.h"

@implementation LoginController
@synthesize delegate = _delegate;
@synthesize txtUserName, txtPassword, username;
@synthesize logintable=_logintable;
@synthesize Loginbtn = _Loginbtn;

+ (LoginController *)loginViewControllerWithUsername:(NSString *)username {
    LoginController *login;
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad) {
        login = [[LoginController alloc] initWithNibName:@"LoginController_IPad" bundle:nil];        
    }else{
        login = [[LoginController alloc] initWithNibName:@"LoginController" bundle:nil];

    }
    
  
    login.title = @"Sign In";
    login.username = username;
    return login;
}
-(void)viewWillAppear:(BOOL)animated
{
    
#if __IPHONE_OS_VERSION_MAX_ALLOWED >= 70000
    if (SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(@"7.0"))
        {
        _Loginbtn.frame = CGRectMake(self.Loginbtn.frame.origin.x,self.Loginbtn.frame.origin.y+20, self.Loginbtn.frame.size.width, self.Loginbtn.frame.size.height);
        
        }else{
            _Loginbtn.frame = CGRectMake(self.Loginbtn.frame.origin.x,self.Loginbtn.frame.origin.y, self.Loginbtn.frame.size.width, self.Loginbtn.frame.size.height);

        }
#endif

    
    
    self.navigationController.navigationBarHidden=YES;
   
     //self.view.backgroundColor = [UIColor colorWithRed:53.0/255.0 green:152.0/255.0 blue:219.0/255.0 alpha:1.0];
    [self.view setBackgroundColor:[UIColor colorWithRed:238.0/255.0 green:238.0/255.0 blue:238.0/255.0 alpha:1.0]];
}
- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 2;
}
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return 0;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    return 0;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    static NSString *CellIdentifier = @"Cell";
    LoginCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil)
    {
        NSArray *topLevelObject = [[NSBundle mainBundle] loadNibNamed:@"LoginCellView" owner:self options:nil];
        
        for(id currentObject in topLevelObject)
        {
            if([currentObject isKindOfClass:[UITableViewCell class]])
            {
                cell = (LoginCell*) currentObject;
            }
        }
    }
    if (indexPath.row == 0) {
        cell.txt.font = [UIFont fontWithName:@"Arial Black" size:50.0];
        cell.txt.placeholder=@"Username";
         cell.selectionStyle = UITableViewCellSelectionStyleNone;
        //cell.txt.text =self.username;
    }
    if (indexPath.row == 1) {
        
        cell.txt.font = [UIFont fontWithName:@"Arial Black" size:50.0];
        cell.txt.secureTextEntry = YES;
        cell.txt.placeholder=@"Password";
         cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    return cell;
}

-(void)viewDidAppear:(BOOL)animated{
    
    [super viewDidAppear:animated];
    LoginCell *cell = (LoginCell*)[_logintable cellForRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:0]];
    
    cell.txt.text = self.username;

    
}

- (void)viewDidLoad
{
        
   
    [super viewDidLoad];
    
   // txtUserName.text = self.username;
}

- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
   
   
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

- (void)login:(id)sender {
    LoginCell *cell1 = (LoginCell*)[_logintable cellForRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:0]];
    LoginCell *cell2 = (LoginCell*)[_logintable cellForRowAtIndexPath:[NSIndexPath indexPathForRow:1 inSection:0]];
         
       uname = cell1.txt.text;
    
        password = cell2.txt.text;	
       
 
       
    FieldWorkAccount *account = [[FieldWorkAccount alloc] init];
//    NSString *uname = self.txtUserName.text;
  //  NSString *password = self.txtPassword.text;
    if (uname.length <= 0 || password.length <= 0) {
        UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@""
                                                 message:@"Please enter valid information to login!"
                                                delegate:nil
                                       cancelButtonTitle:@"Ok"
                                       otherButtonTitles:nil];
        [alert show];
        return;
    }
    [[ActivityIndicator currentIndicator] displayActivity:@"Logging In..."];
    
//    DashBoardViewController *sc = [DashBoardViewController init];
//    [self.navigationController pushViewController:sc animated:YES];

    [account authenticatedWithUserName:uname andPassword:password withDelegate:self];
}

#pragma AccountAuthenticateDelegate

- (void)accountAuthenticatedWithAccount:(FieldWorkAccount *)account {
    [AccountManager Instance].activeAccount = account;
    NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];
    [userDefaults setValue:account.userName forKey:@"UserName"];
    [[ActivityIndicator currentIndicator] displayCompleted];
    
    [self.delegate userDidLogin:self];
}

- (void)accountDidFailAuthentication:(NSError *)error {
    [[ActivityIndicator currentIndicator] displayCompletedWithError:@"Fail"];
    UIAlertView * alert = [[UIAlertView alloc] initWithTitle:@""
                                                     message:[error.userInfo objectForKey:@"message"]
                                                    delegate:nil
                                           cancelButtonTitle:@"Ok"
                                           otherButtonTitles:nil];
    [alert show];
}

@end
