    //
    //  CustomerDetailViewController.m
    //  FieldWork
    //
    //  Created by Samir Kha on 19/02/2013.
    //  Copyright (c) 2013 __MyCompanyName__. All rights reserved.
    //

#import "CustomerDetailViewController.h"
#import "DrivingDirectionMap.h"
@implementation CustomerDetailViewController
@synthesize cust = _cust,CustomerTable,scrollView = _scrollView;
+ (CustomerDetailViewController*) initWithAppointment:(Customer*) app;
{
     CustomerDetailViewController *customer ;
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad) {
        customer = [[CustomerDetailViewController alloc] initWithNibName:@"CustomerDetailViewController_IPad" bundle:nil];        
    }else{
        customer = [[CustomerDetailViewController alloc] initWithNibName:@"CustomerDetailViewController" bundle:nil];
     }

   
    customer.title = @"Customer Detail";
    customer.cust=app;
    return customer;
}


- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    addressViewRoundCornerbtn.layer.cornerRadius = 9;
    BillingAddressViewRoundCornerbtn.layer.cornerRadius = 9;
    lblContactName.text = [self.cust getDisplayName];
    
    
    
    NSString *address= [self.cust getFullAddress];
    
    lblCustomerName.text = [self.cust getDisplayName];
    
    lblContectHed_name.text = [self.cust getDisplayName];
    
    
    lblAddress.text = address;
    lblAddress.numberOfLines = 0;
    [lblAddress sizeToFit];
    billing_lblContactName.text = [self.cust getDisplayName];
    
    NSString *billing_address= [self.cust getBillingFullAddress];
    lblCustomerName.text = [self.cust getDisplayName];
    
    billing_lblAddress.text = billing_address;
    billing_lblAddress.numberOfLines = 0;
    [billing_lblAddress sizeToFit];
}

- (void)viewDidLoad {
        [super viewDidLoad];
    
    float buttons_y = CustomerTable.frame.origin.y + CustomerTable.frame.size.height;
    _scrollView.contentSize = CGSizeMake(self.view.frame.size.width, buttons_y+100);//110
}


- (void)viewDidUnload
{
    [super viewDidUnload];
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

-(IBAction)displayDrivingDirectionMap:(id)sender
{
   [[ActivityIndicator currentIndicator] displayActivity:@"Please wait..."];
    UIButton * btn= (UIButton *)sender;
    NSString *addr = [self.cust getFullAddress];
    if (btn.tag==1011) {
        addr=[self.cust getBillingFullAddress];
    }
    
    [SVGeocoder geocode:addr
             completion:^(NSArray *placemarks, NSHTTPURLResponse *urlResponse, NSError *error) {
                 if (placemarks.count > 0) {
                     SVPlacemark *place = [placemarks objectAtIndex:0];
                     
                     Class itemClass = [MKMapItem class];
                     if (itemClass && [itemClass respondsToSelector:@selector(openMapsWithItems:launchOptions:)]) {
                         MKMapItem *currentLocation = [MKMapItem mapItemForCurrentLocation];
                         MKMapItem *toLocation = [[MKMapItem alloc] initWithPlacemark:[[MKPlacemark alloc] initWithCoordinate:place.coordinate addressDictionary:nil] ];
                         toLocation.name = [self.cust getDisplayName];
                         [MKMapItem openMapsWithItems:[NSArray arrayWithObjects:currentLocation, toLocation, nil]
                                        launchOptions:[NSDictionary dictionaryWithObjects:[NSArray arrayWithObjects:MKLaunchOptionsDirectionsModeDriving, [NSNumber numberWithBool:YES], nil]
                                                                                  forKeys:[NSArray arrayWithObjects:MKLaunchOptionsDirectionsModeKey, MKLaunchOptionsShowsTrafficKey, nil]]];
                         
                     } else {
                         NSString* urlStr = [NSString stringWithFormat: @"http://maps.google.com/maps?saddr=Current%%20Location&daddr=%f,%f", place.coordinate.latitude, place.coordinate.longitude];
                         [[UIApplication sharedApplication] openURL: [NSURL URLWithString:urlStr]];
                     }
                     
                 }
                 [[ActivityIndicator currentIndicator] displayCompleted];
             }];
    
    
        //    DrivingDirectionMap *map = [DrivingDirectionMap controllerWithAppointment:self.appointment];
        //    [self.navigationController pushViewController:map animated:YES];
}

- (void)didReceiveMemoryWarning
{
        // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
        // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle


- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 4;
}
- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section
{
    return @"Contact";
}


- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    static NSString *CellIdentifier = @"Cell1";
    
    AppotmentDetailCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil)
        {
        
        NSArray *topLevelObject = [[NSBundle mainBundle] loadNibNamed:@"AppointmentDetailTableCell" owner:self options:nil];
        
        for (AppotmentDetailCell *AppointmentCurrentObject in topLevelObject)
            {
            if([AppointmentCurrentObject isKindOfClass:[UITableViewCell class]])
                {
                cell = (AppotmentDetailCell*)AppointmentCurrentObject;
                }
            }
        }
       
    if(indexPath.row == 0)
    {   
        cell.lbl1.text = self.cust.service_contact;
        if (cell.lbl1.text.length <= 0) {
        }
        cell.lbl1.text = @"Contact";
        cell.lbl2.text = self.cust.service_contact;
    }
    else if(indexPath.row == 1)
    {
        cell.lbl1.text = self.cust.phone_kind;
        NSLog(@"%@",cell.lbl1.text);
        // cell.lbl1.text = self.cust.phone;
        if (cell.lbl1.text.length <= 0) {
            cell.lbl1.text = @"Other";
        }
        cell.lbl2.text = self.cust.phone;
    }
    else if(indexPath.row == 2)
    {
        if (self.cust.phones.count > 0) {
            cell.lbl1.text = [[self.cust.phones allKeys] objectAtIndex:0];
            if (cell.lbl1.text.length <= 0) {
                cell.lbl1.text = @"Other";
            }
            cell.lbl2.text = [self.cust.phones objectForKey:[[self.cust.phones allKeys] objectAtIndex:0]];
        }
    }
    else if(indexPath.row == 3)
    {
        cell.lbl1.text = @"Email";
        cell.lbl2.text = self.cust.service_record_email;
    }
    
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if(indexPath.section == 0)
        {
        if (indexPath.row == 1) {
            if (self.cust.phone.length <= 0) {
                return 0;
            }
        }else if(indexPath.row == 2){
            if (self.cust.phones.count <= 0) {
                return 0;
            }
        }
        }
    return 45;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    if (indexPath.section == 0)
    {
        if (indexPath.row == 1)
        {
            NSString*  str;
            
            NSLog(@"%@",self.cust.phone);
            str=[self.cust.phone stringByReplacingOccurrencesOfString:@"(" withString:@""];
            str=[str stringByReplacingOccurrencesOfString:@") " withString:@""];
            str=[str stringByReplacingOccurrencesOfString:@"-" withString:@""];
            NSLog(@"replace :%@",str);
           [[UIApplication sharedApplication] openURL:[NSURL URLWithString:[NSString stringWithFormat:@"tel://%@",str]]];
            
           
        }
        else if(indexPath.row == 2)
        {
            if(self.cust.phones.count >0 )
            {     
                NSString*  str;
                
                str=[self.cust.phone stringByReplacingOccurrencesOfString:@"(" withString:@""];
                str=[str stringByReplacingOccurrencesOfString:@") " withString:@""];
                str=[str stringByReplacingOccurrencesOfString:@"-" withString:@""];

                   [[UIApplication sharedApplication] openURL:[NSURL URLWithString:[NSString stringWithFormat:@"tel://%@",str]]];
               // [[UIApplication sharedApplication] openURL:[NSURL URLWithString:[NSString stringWithFormat:@"tel://%@",[self.cust.phones objectForKey:[[self.cust.phones allKeys] objectAtIndex:0]]]]];
            }
        }
        else if(indexPath.row == 3)
        {
            MFMailComposeViewController *mailPicker = [[MFMailComposeViewController alloc] init];
            mailPicker.mailComposeDelegate = self;
            NSArray *toRecipients = [NSArray arrayWithObject:self.cust.service_record_email];
            
            [mailPicker setSubject:@"Hello"];
            [mailPicker setToRecipients:toRecipients];
            
            [mailPicker setMessageBody: @"" isHTML:NO];
            
            [self presentModalViewController:mailPicker animated:YES];
        }
    }
}

- (void)mailComposeController:(MFMailComposeViewController*)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError*)error
{
    [self dismissModalViewControllerAnimated:YES];
}

@end
