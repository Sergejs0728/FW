//
//  CaptureSignatureController.m
//  FieldWork
//
//  Created by Samir Kha on 11/01/2013.
//  Copyright (c) 2013 __MyCompanyName__. All rights reserved.
//

#import "CaptureSignatureController.h"

@interface CaptureSignatureController()
{
@private
	
	__unsafe_unretained id<JBSignatureControllerDelegate> delegate_;
}
@property(nonatomic,strong) JBSignatureView *signatureView;

@end

@implementation CaptureSignatureController

@synthesize signatureView=signatureView_,delegate=delegate_;
@synthesize signatureContainer = _signatureContainer;

@synthesize captureMode = _captureMode;

+ (CaptureSignatureController *)viewControllerWithAppointment:(Appointment *)app withCaptureMode:(CaptureMode)mode {
//    CaptureSignatureController *controller = [[CaptureSignatureController alloc] initWithNibName:@"CaptureSignatureController" bundle:nil];
    CaptureSignatureController *controller; 
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad) {
        controller = [[CaptureSignatureController alloc] initWithNibName:@"CaptureSignatureController_IPad" bundle:nil];        
    }else{
        controller = [[CaptureSignatureController alloc] initWithNibName:@"CaptureSignatureController" bundle:nil];
        
    }

    controller.Appointment = app;
    controller.captureMode = mode;
    return controller;
}

#pragma mark - View lifecycle

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    //08032013
    
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad) {
        self.signatureView = [[JBSignatureView alloc] initWithFrame:CGRectMake(0,0,685.0,350.0)] ; //958,639
  
    }else{
        self.signatureView = [[JBSignatureView alloc] initWithFrame:CGRectMake(0, 0, 453.0,231.0)] ;//438.0,213.0
     }

    
    
    
    
    
    
    
    
    
    
   // self.signatureView = [[JBSignatureView alloc] initWithFrame:CGRectMake(0, 0, 438.0,213.0)] ;
  
    
    
    
    
    
    
    
    
    
    //436.0,208.0
   // self.signatureView = [[JBSignatureView alloc] initWithFrame:CGRectMake(0, 0, 436.0,190.0)] ;
    
    self.signatureView.delegate = self;
    signatureView_.userInteractionEnabled = YES;
    signatureView_.multipleTouchEnabled = YES;
    [self.signatureContainer addSubview:self.signatureView];
    NSString *licenseNumber = @"";
    if(self.captureMode == CustomerMode)
    {
        [signatureLbl setText:@"Customer Signature"];
        
    }
    
    if(self.captureMode == TechnicianMode)
    {
        [signatureLbl setText:@"Technician Signature"];
        if ([UserInfo Instance].licenseNumber != nil && [UserInfo Instance].licenseNumber.length > 0) {
            licenseNumber = [NSString stringWithFormat:@"LIC# %@", [UserInfo Instance].licenseNumber];
        }
    }
    lblLicenseNumber.text = licenseNumber;
    
    
//    CGAffineTransform newTransform = CGAffineTransformMake(0.0,1.0,-1.0,0.0,0.0,0.0);         
    self.view.transform = CGAffineTransformMakeRotation(DEGREES_TO_RADIANS(90));
    [[UIApplication sharedApplication] setStatusBarHidden:YES];
    [[self navigationController] setNavigationBarHidden:YES animated:NO];
}

- (void)viewDidUnload
{
    [super viewDidUnload];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
   
    
    [self clearSignature];
    
    if (self.delegate && [self.delegate respondsToSelector:@selector(signatureCancelled:)]) {
		[self.delegate signatureCancelled:self];
	}    
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    [[UIApplication sharedApplication] setStatusBarHidden:NO];
    [[self navigationController] setNavigationBarHidden:NO animated:NO];
}
-(BOOL)shouldAutomaticallyForwardRotationMethods
{
    return NO;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return NO;
}

- (void)cancelClicked:(id)sender {
    [self.navigationController popViewControllerAnimated:YES];
}

-(void)clearSignature {
	
	if (self.delegate && [self.delegate respondsToSelector:@selector(signatureCleared:signatureController:)]) {
		UIImage *signatureImage = [self.signatureView getSignatureImage];
		[self.delegate signatureCleared:signatureImage signatureController:self];
	}
	
	[self.signatureView clearSignature];
}

- (void)saveSignature:(id)sender {
    if (self.captureMode == CustomerMode) {
        if ([self.signatureView getSignatureArray].count > 0) {
            self.Appointment.customer_signature = [self.signatureView getSignatureArray];
            [self.Appointment saveSignaturesWithMode:CustomerMode];
        }
    }
    if (self.captureMode == TechnicianMode) {
        if ([self.signatureView getSignatureArray].count > 0) {
            self.Appointment.technician_signature = [self.signatureView getSignatureArray];
            [self.Appointment saveSignaturesWithMode:TechnicianMode];
        }
    }
    [self.navigationController popViewControllerAnimated:YES];
}

@end
